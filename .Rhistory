install.packages("roxygen2")
install.packages("devtools")
installed.packages("curl")
installe.packages("curl")
install.packages("curl")
install.packages("libcurl")
install.packages("curl")
install.packages("devtools")
install.packages("openssl")
install.packages("devtools")
install.packages("roxygen2")
install.packages("roxygen2")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(GNSSseg)
devtools::document()
library(GNSSseg)
install.packages("benchmark")
install.packages("microbenchmark")
n <- 1e4
expr1 <- {
out = c()
for(i 1:n){
nn = rnorm(1)
out = c(out, nn)
}
out
}
expr2 <- {
out = rep(NA, n)
for(i 1:n){
out[i] = rnorm(1)
}
out
}
expr3 <- {
out = rnorm(n)
out
}
library(microbenchmark)
microbenchmark(expr1, expr2, expr3, times = 10)
expr2 <- {
out = rep(NA, n)
for(i 1:n){
out[i] = rnorm(1)
}
out
}
expr2 <- {
out = rep(NA, n)
for(i 1:n){
out[i] = rnorm(1)
}
out
}
n <- 1e4
expr1 <- {
out = c()
for(i in 1:n){
nn = rnorm(1)
out = c(out, nn)
}
out
}
expr2 <- {
out = rep(NA, n)
for(i in 1:n){
out[i] = rnorm(1)
}
out
}
expr3 <- {
out = rnorm(n)
out
}
library(microbenchmark)
microbenchmark(expr1, expr2, expr3, times = 10)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(GNSSseg)
devtools::document()
?dnorm
devtools::use_vignette()
devtools::use_vignette("vignette_GNSSeg")
install.packages("rmarkdown")
devtools::use_vignette("vignette_GNSSeg")
devtools::use_vignette("vignette_GNSSseg")
usethis::use_vignette("vignette_GNSSseg")
library(GNSSseg)
devtools::check()
library(GNSSseg)usethis::
library(ggplot2)
devtools::check()
devtools::check()
devtools::document()
devtools::check()
stats::qnorm(4)
stats::qnorm(5/8)
devtools::check()
?summary
?lm
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library("GNSSseg", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("GNSSseg", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("~/Dropbox/GNSSseg/GNSSseg_2.0.tar.gz", repos = NULL, type = "source")
library(GNSSseg)
?GNSSseg
data(Data)
lyear=365.25
Kmax=8
result=GNSSseg(Data,lyear,Kmax=Kmax)
plot_GNSS(Data,result$segmentation,result$functional)
